name: CI â€” Testes (Ubuntu + Windows)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Test on ${{ matrix.os }} / Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.11, 3.10]
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "compilador/requirements.txt" ]; then pip install -r compilador/requirements.txt; fi
        shell: bash

      - name: Run tests (OS-specific)
        if: matrix.os == 'ubuntu-latest'
        run: |
          chmod +x compilador/scripts/run_all_tests.sh || true
          ./compilador/scripts/run_all_tests.sh
        shell: bash

      - name: Run tests (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $ErrorActionPreference = 'Stop'
          Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          pip install --upgrade pip
          if (Test-Path "compilador/requirements.txt") { pip install -r compilador/requirements.txt }
          # Use the PowerShell test script if present, otherwise fallback to pytest
          if (Test-Path "compilador/scripts/run_all_tests.ps1") {
            .\compilador\scripts\run_all_tests.ps1
          } else {
            pytest compilador/test -q
          }
        shell: pwsh

      - name: Fallback - Run pytest (if scripts didn't run)
        if: ${{ always() }}
        run: |
          pytest compilador/test -q || true
        shell: bash

      - name: Upload pytest JUnit (optional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: report.xml
